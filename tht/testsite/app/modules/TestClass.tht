import('subDir/OtherClass');

F factory() {

    return new TestClass('factory', 99);
}

class TestClass {

    F new(name, num) {

        @.name = name;
        @.num = num;

        @.state['hiddenChar'] = 'x';
        @.state = {
            hiddenNum: 0
        };

        @.dep = new OtherClass();

        return @;
    }

    F dependency() {
        return @.dep.ok();
    }

    F getHidden() {
        return @.state.hiddenNum;
    }

    F setHidden(num) {
        @.state.hiddenNum = num;
    }

    F allState() {
        return @.state;
    }

    F getName() {
        print('get name');
        return @.name ~ '!';
    }

    F test() {
        return 'class:' ~ @.name ~ @.num;
    }

    F zDynamicGet(field) {
        if (field == 'okField') {
            return Result.ok('dynamic:' ~ field);
        }
        else {
            return Result.fail();
        }
    }

    F zDynamicCall(methodName, args) {
        if (methodName == 'getSecretNumber') {
            return Result.ok(42);
        }
        return Result.fail();
    }

    T html() {

        <b>Hello</>

    }
}


