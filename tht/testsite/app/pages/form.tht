

F main() {

    let form = getForm();
    
    form.setFields({
        userName: 'jlesko',
        color: 'Green',
        state: 'wi',
        toppings: Q[ Pepperoni Pineapple ]
    });


    let html = formHtml(form);

    Web.sendPage({
        body: html,
        title: 'Test Form',
        css: Css.include('base')
    });
}

F ajax() {
   getForm().validate('/yay');
}

F getForm() {

    let form = Web.form({
        userName: {
            label: 'User Name',
            rule: 'min:4'
        },
        email: {
            label: 'Email',
            rule: 'email',
            value: 'a@b.com',
            help: 'Make sure it is valid!'
        },
        zip: {
            label: 'Zip Code',
            rule: 'optional|digits'
        },
        password: {
            label: 'Password',
            type: 'password',
        },
        comment: {
            label: 'Comment',
            type: 'textarea'
        },
        secret: {
            type: 'hidden',
            value: '12345',
        },
        state: {
            label: 'State',
            type: 'select',
            options: {
                wi: 'Wisconsin',
                fl: 'Florida',
                ca: 'California'
            }
        },
        color: {
            label: 'Color',
            type: 'radio',
            options: Q[ Red Blue Green ],
        },
        toppings: {
            label: 'Toppings',
            type: 'checkbox',
            options: Q[ Pepperoni Pineapple Anchovies ]
        },
        // TODO
        // users: {
        //     label: 'User',
        //     type: 'select',
        //     options: [
        //         { userId: 1, name: 'Bob' },
        //         { userId: 2, name: 'Alice' },
        //         { userId: 3, name: 'Charlie' }
        //     ]
        // }
    });

    // let loginForm = Web.form({
    //     userName: {
    //         label: 'User Name',
    //         rule: 'min:4'
    //     },
    //     password: {
    //         label: 'Password',
    //         type: 'password',
    //     }
    // }, 'loginForm');


    return form;
}

T thanksHtml(d) {

    <.row><.col>

        <h1>> Success

        <p>> Thanks <b>> {{ d.userName }}!

        </></>
}

F getOptions() {
    return {
        '1': 'Option 1',
        '2': 'Option 2',
        '3': 'Option 3',
    };
}


T formHtml(form) {

    <.row><.col>

        <h1>> Test Form

        :: let f = form;

        {{ f.open('', { jsValidation: false }) }}

            {{ f.tags() }}

            {{ f.submit('Submit', { class: 'button-large button-primary' }) }}

        {{ f.close() }}


    </></>


}



/*


        {{ loginForm.open('/login', { id: 'loginForm' }) }}

            {{ loginForm.tag('userName') }}
            {{ loginForm.tag('password') }}
          
            {{ loginForm.submit('Login', { class: 'button-large button-primary' }) }}

        {{ loginForm.close() }}


    {{ Web.validateJs() }}

  

        {{ Form.select('num', 'Select a Number', getOptions()) }}
        {{ Form.select('year', 'Select a Year', range(1950, Date.format('%Y').toNumber())) }}

        <fieldset>
        {{ Form.checkbox('accept', '1', 'I accept this form.') }}
        </>

        <fieldset>
        {{ Form.radio('hey', '1', 'Option 1', { on: true }) }}
        {{ Form.radio('hey', '2', 'Option 2') }}
        {{ Form.radio('hey', '3', 'Option 3') }}
        </>


    email (__@__.__)
    url (https?://)

    num (length) - negative | decimal | range

    token ([a-zA-Z0-9_-])
    id (numeric, non-negative)
    alphanumeric (e.g. hash)

    digits_between (min, max)
    accepted
    filled/required

    sameAs
    minsize - string length
    maxsize - string length

    text

    multiline

    (regex)

*/

